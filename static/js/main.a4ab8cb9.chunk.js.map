{"version":3,"sources":["assets/figure.png","assets/icon.svg","assets/logo.svg","components/form/textInput.js","_services/request.js","components/list/getCryptoPrice.js","components/text/layout.js","components/text/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","card","minWidth","padding","breakpoints","down","textField","marginLeft","spacing","marginRight","typographyText","marginTop","margin","marginBottom","AddButton","withStyles","root","color","palette","getContrastText","deepOrange","backgroundColor","Fab","TextInputFormComponent","props","classes","Card","className","TextField","id","label","variant","onChange","handleTextFieldChange","onClick","handleAddButtonClick","Typography","display","gutterBottom","style","getCryptoPriceList","requests","axios","get","then","response","data","GetCryptoPriceList","displaySnackBarMessage","SnackbarContent","message","state","errorMessage","priceList","prevProps","this","priceListRequest","Response","setState","cryptoPriceList","length","Object","keys","map","eachPriceListItem","index","key","src","Icon","alt","EUR","IconButton","evt","handleDeleteButtonClick","Component","LayoutTextComponent","Logo","width","FooterTextComponent","App","input","JSON","parse","localStorage","getItem","handleChange","e","target","value","onAddButtonClick","previousState","onDeleteButtonClick","item","filter","request","prevState","setItem","stringify","Figure","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4ab8cb9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/figure.50a6406b.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.64c89343.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c308b163.svg\";","import React from 'react';\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    minWidth: 270,\r\n    padding: 30,\r\n    [theme.breakpoints.down('sm')]: {\r\n      minWidth: 230,\r\n    },\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  typographyText: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AddButton = withStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    '&:hover': {\r\n      backgroundColor: deepOrange[700]\r\n    }\r\n  }\r\n}))(Fab);\r\n\r\nexport default function TextInputFormComponent(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <TextField\r\n        id=\"outlined-helperText\"\r\n        label=\"CRYPTOCURRENCY CODE\"\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        onChange={props.handleTextFieldChange}\r\n      />\r\n      <AddButton\r\n        variant=\"extended\"\r\n        color=\"primary\"\r\n        className={classes.margin}\r\n        onClick={props.handleAddButtonClick}\r\n      >\r\n        Add\r\n      </AddButton>\r\n      <Typography\r\n        variant=\"caption\"\r\n        display=\"block\"\r\n        color=\"inherit\"\r\n        gutterBottom\r\n        style={{ color: '#bdb0b0' }}\r\n      >\r\n        Use of this service is subject to terms and\r\n        <br />\r\n        {'conditions'}\r\n      </Typography>\r\n    </Card>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nfunction getCryptoPriceList(requests) {\r\n  return axios\r\n    .get(\r\n      `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${requests}&tsyms=EUR`\r\n    )\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nexport default getCryptoPriceList;\r\n","import React, { Component } from 'react';\r\n\r\nimport Icon from '../../assets/icon.svg';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport getCryptoPriceList from '../../_services/request';\r\n\r\nimport './getCryptoPrice.scss';\r\nclass GetCryptoPriceList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { priceList: [], errorMessage: '' };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.priceListRequest !== prevProps.priceListRequest) {\r\n      getCryptoPriceList(this.props.priceListRequest).then(response => {\r\n        if (response.Response) {\r\n          this.setState({\r\n            errorMessage:\r\n              'Oops! No data available try again or use uppercase letters like (e.g. BTC, NMC).',\r\n            priceList: []\r\n          });\r\n        } else {\r\n          this.setState({ priceList: response });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    getCryptoPriceList(this.props.priceListRequest).then(response => {\r\n      response.Response\r\n        ? this.setState({\r\n            errorMessage:\r\n              'Oops! No data available try again or use uppercase letters like (e.g. BTC, NMC).',\r\n            priceList: []\r\n          })\r\n        : this.setState({ priceList: response });\r\n    });\r\n  }\r\n\r\n  displaySnackBarMessage = () => {\r\n    return (\r\n      <SnackbarContent\r\n        message={this.state.errorMessage}\r\n        style={{ backgroundColor: '#4e2872' }}\r\n        className=\"crypto-priceList-container-item\"\r\n      />\r\n    );\r\n  };\r\n  render() {\r\n    const cryptoPriceList =\r\n      this.state.errorMessage && this.state.priceList.length === 0\r\n        ? this.displaySnackBarMessage()\r\n        : Object.keys(this.state.priceList).map((eachPriceListItem, index) => (\r\n            <div key={index}>\r\n              <div className=\"crypto-priceList-container-item\">\r\n                <img src={Icon} alt=\"icon\" />\r\n                <div className=\"crypto-priceList-container-item-col\">\r\n                  <Typography variant=\"subtitle2\" gutterBottom>\r\n                    {eachPriceListItem}\r\n                  </Typography>\r\n                  <p className=\"App-content-sub-details\">\r\n                    {this.state.priceList[eachPriceListItem].EUR} €\r\n                  </p>\r\n                </div>\r\n                <IconButton\r\n                  onClick={evt => {\r\n                    this.props.handleDeleteButtonClick(eachPriceListItem, evt);\r\n                  }}\r\n                >\r\n                  <CloseIcon className=\"crypto-priceList-container-item-close\" />\r\n                </IconButton>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ));\r\n    return <div className=\"crypto-priceList-container\">{cryptoPriceList}</div>;\r\n  }\r\n}\r\n\r\nexport default GetCryptoPriceList;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Logo from '../../assets/logo.svg';\r\n\r\nexport default function LayoutTextComponent() {\r\n  return (\r\n    <div className=\"App-content-info-container\">\r\n      <img src={Logo} alt=\"logo\" />\r\n      <Typography\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        style={{ width: '100%', marginTop: '15%' }}\r\n      >\r\n        Now you can track all your cryptos here!\r\n      </Typography>\r\n      <p className=\"App-content-info-paragraph\">\r\n        Just enter the cryptocurrency code on the form to the right\r\n      </p>\r\n      <p className=\"App-content-info-mobile\">\r\n        Just enter the cryptocurrency code on the form below\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function FooterTextComponent() {\r\n  return (\r\n    <div className=\"App-footer\">\r\n      <Typography\r\n        variant=\"caption\"\r\n        display=\"block\"\r\n        color=\"inherit\"\r\n        gutterBottom\r\n        style={{ color: '#bdb0b0' }}\r\n      >\r\n        At vero eos et accusamus et iusto odio dignissimos ducimus qui\r\n        blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\r\n        et quas molestias excepturi sint occaecati cupiditate non provident,\r\n        similique sunt in culpa qui officia deserunt mollitia animi, id est\r\n        laborum et dolorum fuga.in culpa qui officia deserunt mollitia animi, id\r\n        est laborum et dolorum fuga.\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Figure from './assets/figure.png';\r\n\r\nimport TextInputFormComponent from './components/form/textInput';\r\nimport GetCryptoPriceList from './components/list/getCryptoPrice';\r\nimport LayoutTextComponent from './components/text/layout';\r\nimport FooterTextComponent from './components/text/footer';\r\n\r\nimport './App.scss';\r\nclass App extends Component {\r\n  state = {\r\n    input: '',\r\n    priceListRequest: JSON.parse(localStorage.getItem('priceListRequest')) || []\r\n  };\r\n  componentDidUpdate(prevState) {\r\n    if (this.state.priceListRequest !== prevState.priceListRequest) {\r\n      localStorage.setItem(\r\n        'priceListRequest',\r\n        JSON.stringify(this.state.priceListRequest)\r\n      );\r\n    }\r\n  }\r\n  handleChange = e => {\r\n    this.setState({ input: e.target.value });\r\n  };\r\n  onAddButtonClick = e => {\r\n    this.setState(previousState => ({\r\n      priceListRequest: [...previousState.priceListRequest, this.state.input]\r\n    }));\r\n  };\r\n  onDeleteButtonClick = (item, e) => {\r\n    this.setState({\r\n      priceListRequest: this.state.priceListRequest.filter(\r\n        request => item !== request\r\n      )\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-layout\">\r\n          <div className=\"App-content\">\r\n            <div className=\"App-content-info\">\r\n              <LayoutTextComponent />\r\n              <GetCryptoPriceList\r\n                priceListRequest={this.state.priceListRequest}\r\n                handleDeleteButtonClick={this.onDeleteButtonClick}\r\n              />\r\n            </div>\r\n            <div className=\"App-content-center\">\r\n              <img src={Figure} alt=\"clown figure\" />\r\n            </div>\r\n            <div className=\"App-content-form\">\r\n              <TextInputFormComponent\r\n                handleAddButtonClick={this.onAddButtonClick}\r\n                handleTextFieldChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <FooterTextComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}